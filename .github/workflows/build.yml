name: build-and-release
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release: # Объединяем все в одну задачу
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Достаточно прав для создания релиза

    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v2
      - name: setup jdk 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
      - name: make gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew
      - name: build
        run: ./gradlew build

      # Создание релиза и загрузка артефакта
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # Используем steps, а не needs
          asset_path: build/libs/marwyskinsystem-${{ github.ref_name }}.jar  # Прямой путь к артефакту
          asset_name: marwyskinsystem-${{ github.ref_name }}.jar
          asset_content_type: application/java-archive
